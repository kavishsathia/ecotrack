# Database Configuration
# Neon PostgreSQL Database URL with connection pooling
DATABASE_URL=postgres://username:password@host/database?sslmode=require
DATABASE_URL_UNPOOLED=postgresql://username:password@host/database?sslmode=require

# Neon Database Parameters
PGHOST=your-host-pooler.region.aws.neon.tech
PGHOST_UNPOOLED=your-host.region.aws.neon.tech
PGUSER=your_username
PGDATABASE=your_database
PGPASSWORD=your_password

# Vercel Postgres Templates
POSTGRES_URL=postgres://username:password@host/database?sslmode=require
POSTGRES_URL_NON_POOLING=postgres://username:password@host/database?sslmode=require
POSTGRES_USER=your_username
POSTGRES_HOST=your-host-pooler.region.aws.neon.tech
POSTGRES_PASSWORD=your_password
POSTGRES_DATABASE=your_database
POSTGRES_URL_NO_SSL=postgres://username:password@host/database
POSTGRES_PRISMA_URL=postgres://username:password@host/database?connect_timeout=15&sslmode=require

# Authentication - Stack Auth
NEXT_PUBLIC_STACK_PROJECT_ID=your-stack-project-id
NEXT_PUBLIC_STACK_PUBLISHABLE_CLIENT_KEY=your-stack-publishable-key
STACK_SECRET_SERVER_KEY=your-stack-secret-key

# SingPass OAuth Configuration
SINGPASS_CLIENT_ID=your-singpass-client-id
SINGPASS_CLIENT_SECRET=your-singpass-client-secret
SINGPASS_ENVIRONMENT=sandbox  # or production
NEXTAUTH_URL=http://localhost:3080  # Your app's URL
NEXTAUTH_SECRET=your-nextauth-secret-key-min-32-chars

# AI API Keys
OPENAI_API_KEY=sk-proj-your-openai-api-key
GEMINI_API_KEY=your-gemini-api-key

# Telegram Bot Configuration
TELEGRAM_BOT_TOKEN=your-telegram-bot-token
TELEGRAM_BOT_SECRET=your-secret-for-webhook-auth
LIFE_APP_API_URL=http://localhost:3080/api  # API base URL for telegram bot

# Chrome Extension Development
CHROME_EXTENSION_ID=your-extension-id-for-development